name: CI

on:
  push:
    branches: [ main, spencers, master ]
  pull_request:
    branches: [ main, spencers, master ]
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22'
    
    - name: Clean build cache
      run: npm cache clean --force

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    # - name: Run linter
    #   run: npm run lint

    - name: Build
      run: npm run build       

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/spencers' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::503561421170:role/github.to.aws
        aws-region: us-east-1  
    
    - name: Set deployment environment
      run: |
          if [ ${{ github.ref }} == 'refs/heads/main' ]; then
            echo "DEPLOY_ENV=main" >> $GITHUB_ENV
            echo "EB_ENVIRONMENT=main-staging" >> $GITHUB_ENV
          elif [ ${{ github.ref }} == 'refs/heads/spencers' ]; then
            echo "DEPLOY_ENV=spencers" >> $GITHUB_ENV
            echo "EB_ENVIRONMENT=spencers-staging" >> $GITHUB_ENV
          elif [ ${{ github.ref }} == 'refs/heads/master' ]; then
            echo "DEPLOY_ENV=master" >> $GITHUB_ENV
            echo "EB_ENVIRONMENT=master-staging" >> $GITHUB_ENV
          fi

    - name: Deploy to AWS Elastic Beanstalk
      run: |
            # Get the S3 bucket name associated with the Elastic Beanstalk environment
            EB_ENVIRONMENT="main-staging"  # replace with your environment name
            S3_BUCKET=$(aws elasticbeanstalk describe-environments --environment-names $EB_ENVIRONMENT --query 'Environments[0].Resources.S3Bucket' --output text)
            
            echo "S3 Bucket for Elastic Beanstalk: $S3_BUCKET"
            
            # Zip the application
            zip -r application.zip .
            
            # Upload the application to S3
            aws s3 cp application.zip s3://$S3_BUCKET/application-${{ github.sha }}.zip
            
            # Create a new application version
            aws elasticbeanstalk create-application-version \
              --application-name POSView-Group \
              --version-label ${{ github.sha }} \
              --source-bundle S3Bucket="$S3_BUCKET",S3Key="application-${{ github.sha }}.zip"
            
            # Update the environment with the new version
            aws elasticbeanstalk update-environment \
              --environment-name $EB_ENVIRONMENT \
              --version-label ${{ github.sha }}
   
    
    